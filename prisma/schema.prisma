// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// model User {
//   id Int @id @default(autoincrement())
//   name String
//   email String @unique
//   createdAt DateTime @default(now())
// }

//Atividade Oficina Mec√¢nica

// model Cliente {
//   id Int @id @default(autoincrement())
//   name String
//   email String @unique
//   createdAt DateTime @default(now())
//   veiculo Veiculo[]
//   ordemServico OrdemdeServico[]
// }

// model Veiculo{
//   id Int @id @default(autoincrement())
//   marca String
//   modelo String
//   ano String
//   placa String @unique
//   clienteId Int 
//   cliente Cliente @relation(fields: [clienteId], references: [id])
//   ordemServico OrdemdeServico[]
// }

// model Servico{
//   id Int @id @default(autoincrement())
//   nome String
//   descricao String
//   itemServico ItemServico[]
// }
// model ItemServico{
//   id Int @id @default(autoincrement())
//   servico Servico @relation(fields: [servicoId], references: [id])
//   servicoId Int
//   quantidade Int
//   ordemServico OrdemdeServico[]
// }
// model OrdemdeServico{
//   id Int @id @default(autoincrement())

//   clienteId Int 
//   cliente Cliente @relation(fields: [clienteId], references: [id])

//   veiculoId Int
//   veiculo Veiculo @relation(fields: [veiculoId], references: [id])

//   dataEntrada DateTime
//   dataConclusao DateTime
//   status String
//   observacoes String?
//   itemServico ItemServico[]
// }


//Mudando para prisma

model User{
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  task Task[]
}

model Task{
  id Int @id @default(autoincrement())
  title String
  description String
  userId Int
  user User @relation(fields: [userId], references: [id])
}